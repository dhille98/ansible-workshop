- name: install tomcat server
  hosts: webapps
  become: yes
  tasks:
   # install java-11
    - name: install java-11 
      ansible.builtin.apt:
        name: "{{ java_package}}"
        state: present
        update_cache: true
    - ansible.builtin.debug:
        msg: install "{{ java_package }}" sucessfully

    # group create tomcat 
    - name: tomcat group add
      ansible.builtin.group:
        name: "{{ group }}"
        state: present
    - ansible.builtin.debug:
        msg: create a group "{{ group }}" sucessfully
    # user add tomcat

    - name: tomcat useradd
      ansible.builtin.user:
        create_home: yes
        name: "{{ user }}" 
        group: "{{ group }}"
        home: "{{ home }}"
        shell: "{{ shell }}"
        system: true
        state: present
    - ansible.builtin.debug:
        msg: create a user "{{ user }}" sucessfully

    # download tomcat url and untar the file

    - name: download tomcat tar
      ansible.builtin.unarchive:
        src: "{{ tomcat_url }}"
        dest: "{{ home }}"
        owner: "{{ user }}"
        remote_src: yes
    - ansible.builtin.debug:
        msg: "tomcat is downloaded and extracted to {{ home  }}"

    # all *.sh file stored in shell_files

    - name: find all the shell files
      find:
        paths: "/opt/tomcat/apache-tomcat-10.0.10/bin"
        patterns: '*.sh'
        recurse: yes
      register: shell_files

    # change the permissions on all *.sh files 

    - name: change permissions to execute
      file:
        path: "{{ item.path }}"
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: "755"
      loop: "{{ shell_files.files }}"

    - name: create tomcat application accounts
      ansible.builtin.template:
        src: templates/tomcat-users.xml.j2
        dest: "/opt/tomcat/apache-tomcat-10.0.10/conf/tomcat-users.xml"
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: '0600'
      notify:
        - restart tomcat
    - name: allow remote hosts for manager
      ansible.builtin.template:
        src: templates/manager-context.xml.j2
        dest: "/opt/tomcat/apache-tomcat-10.0.10/webapps/manager/META-INF/context.xml"
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: '0640'
      notify:
        - restart tomcat
    - name: allow remote hosts for host-manager
      ansible.builtin.template:
        src: templates/hostmanager-context.xml.j2
        dest: "/opt/tomcat/apache-tomcat-10.0.10/webapps/host-manager/META-INF/context.xml"
        owner: "{{ user }}"
        group: "{{ group }}"
        mode: '0640'
      notify:
        - restart tomcat
    - name: Create a Systemd Service File
      ansible.builtin.template:
        src: templates/tomcat.service.j2
        dest: "/etc/systemd/system/tomcat.service"
      notify:
        - start tomcat
  handlers:
    - name: start tomcat
      ansible.builtin.systemd_service:
        name: tomcat
        enabled: yes
        daemon_reload: yes
        state: started
    - name: restart tomcat
      ansible.builtin.systemd_service:
        name: tomcat
        enabled: yes
        daemon_reload: yes
        state: restarted